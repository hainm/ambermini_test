#!/bin/csh -f
#TEST-PROGRAM parallel sander
#TEST-DESCRIP adaptive QM/MM
#TEST-PURPOSE regression, basic
#TEST-STATE   TO_BE_DEtermined - clean up unused input variables

set sander = "../../../bin/sander.MPI"
if( $?TESTsander ) then
    set sander = $TESTsander
endif

if( ! $?DO_PARALLEL ) then
    echo "This test (adQMMM) can only run in parallel. Exiting."
    exit 0
endif

set numprocs = `$DO_PARALLEL ../../numprocs`

if ( $numprocs % 4 == 0 ) then
    # for multiple of 4 threads run 4 partitionings
    set npartition = 4
else if ( $numprocs % 2 == 0 ) then
    # for multiple of 2 threads run 2 partitionings
    set npartition = 2
else
   echo "This adQMMM test requires a multiple of 2 or 4 processors!"
   echo "You specified $numprocs"
   exit 0
endif

set system = h2o-box
set prmtop = $system.prmtop
set inpcrd = $system.restrt
set job = adqmmm-6-$npartition
set mdin = $job.mdin
set groupfile = $job.groupfile
set mdout = $job.mdout
set mdcrd = $job.mdcrd
set mdinfo = $job.mdinfo
set restrt = $job.restrt

cat > $mdin <<EOF
adaptive QM/MM (A region = 1 + 8 water), NVE dynamics for 100 steps at dt=0.5fs
 &cntrl
  imin     = 0,      ! do MD (no minimization)
  irest    = 1,      ! trajectory restart
  ntx      = 5,      ! read coordinates and velocities
  dt       = 0.0005  ! 0.5fs time step
  ntb      = 1,      ! periodic boundary conditions
  cut      = 8.0,    ! non-bonded cutoff
  ntpr     = 1,      ! logfile print frequency
  ntwx     = 100,    ! coordinate writing frequency
  ntwr     = 2000,   ! restart file writing frequency
  nstlim   = 100,    ! number of steps
  jfastw   = 4,      ! do not use routines for fast triangulated water
  ioutfm   = 1,      ! NetCDF MDCRD.
  iwrap    = 1,      ! wrap periodic molecules back into box
  ifqnt    = 1,      ! QMMM
  ntxo     = 1,      ! formatted restart
 /
 &ewald
  dsum_tol = 0.000001,  ! Increase PME accuracy
 /
 &qmmm
  qmmask       = ':36',
  qm_theory    = 'PM6',
  scfconv      = 1.0d-8,
  tight_p_conv = 1,
  vsolv        = 2,       ! adQMMM
  adjust_q     = 0,       ! required for vsolv
 /
 &vsolv
  nearest_qm_solvent = 8,              ! solvent in active region
  nearest_qm_solvent_resname = 'WAT',  ! solvent resname
  nearest_qm_solvent_fq = 1,           ! every step
  nearest_qm_solvent_center_id = 1,    ! number of atom in solvent residue defining solvent center
  qm_center_atom_id = 106,             ! absolute number of atom defining QM center
  verbosity = 1,
  debug = 0,
 /
 &adqmmm
  n_partition = $npartition, ! (n-1) molecules in T region
  verbosity = 2,
 /
EOF

# write GROUPFILE
rm -f $groupfile
@ x = 1
while ($x <= $npartition)
    set ext = 00$x
    cat >> $groupfile << EOF
-O -i $mdin -c $inpcrd -o $mdout.$ext -r $restrt.$ext -x $mdcrd.$ext -inf $mdinfo.$ext -p $prmtop
EOF
    @ x += 1
end

$DO_PARALLEL $sander -rem 0 -ng $npartition -groupfile $groupfile < /dev/null || goto error

# trajectories can diverge with different compilers
# thus don't be overly rigid when checking energies and restart coordinates
../../dacdif -a 0.0002 $mdout.001.save $mdout.001
../../dacdif -a 0.0000002 $restrt.001.save $restrt.001

/bin/rm -f $groupfile $mdin $mdout.002 $mdout.003 $mdout.004 $mdcrd.00? $mdinfo.00? adqmmm_*
exit(0)

error:
echo "  ${0}:  Program error"
exit(1)
