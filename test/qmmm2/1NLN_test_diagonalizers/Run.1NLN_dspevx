#!/bin/csh -f
#TEST-PROGRAM sander
#TEST-DESCRIP TO_BE_DEtermined
#TEST-PURPOSE regression, basic
#TEST-STATE   undocumented

set sander = "../../../bin/sander"
if( $?TESTsander ) then
    set sander = $TESTsander
endif

if( ! $?DO_PARALLEL ) then
    setenv DO_PARALLEL " "
endif

cat > mdin <<EOF
MD of 1NLN const volume - QM atoms + 3 link atoms periodic
 &cntrl
  imin=0, irest=0, ntx=1,
  nstlim=4,dt=0.002,
  temp0=300.0,tempi=300.0,
  ntc=2,  ntf=2,
  ntb=1,
  cut=8.0,
  ntt=1,
  ntpr=1,
  ifqnt=1
 /
 &ewald use_pme=1 /
 &qmmm
        iqmatoms=1585,1586,1587,1588,1589,1590,
        1591,1592,1593,1594,1595,1596,1597,1598,1599,1600,1601,1602,
        1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,
        1615,1616,1617,1618,
        3348,3349,3350,3351,3352,3353,3354,3355,
        3356,3357,3358,3359,3360,3361,3362,3363,3364,3365,3366,3367,
        3368,3369,3370,3371,3372,3373,3374,3375,3376,
        qm_theory='AM1', qmcharge=0,
        verbosity=0, qmshake=1,
        qmcut=8.0, qm_ewald=1, qm_pme=1,
        verbosity=0,writepdb=0,adjust_q=2, diag_routine=4,
 /
EOF

set output = mdout.1NLN_dspevx
set inpcrd = 1NLN_15A_solv_min.rst

touch dummy
$DO_PARALLEL $sander -O -p 1NLN_15A_solv.prmtop -c $inpcrd -o  $output< dummy || goto error

../../dacdif -t 1 $output.save $output

/bin/rm -f mdin mdinfo dummy mdcrd restrt
exit(0)

error:
echo "  ${0}:  Program error"
exit(1)
